<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.blocking)
{
    var s = other;
    var bottom_left_x;
    var bottom_left_y;
    var top_right_x;
    var top_right_y;
    switch (other.block_loc)
    {
        case LOC_HIGH:
            bottom_left_x = s.bbox_left;
            bottom_left_y = s.bbox_bottom + (3 * ((s.bbox_top - s.bbox_bottom) / 3));
            top_right_x = bottom_left_x + s.bbox_right - s.bbox_left;
            top_right_y = bottom_left_y - ((s.bbox_top - s.bbox_bottom) / 3);
            break;
        case LOC_LOW:
            bottom_left_x = s.bbox_left;
            bottom_left_y = s.bbox_bottom + ((s.bbox_top - s.bbox_bottom) / 3);
            top_right_x = bottom_left_x + s.bbox_right - s.bbox_left;
            top_right_y = bottom_left_y - ((s.bbox_top - s.bbox_bottom) / 3);
            break;
        case LOC_MID:
            bottom_left_x = s.bbox_left;
            bottom_left_y = s.bbox_bottom + (2 * ((s.bbox_top - s.bbox_bottom) / 3));
            top_right_x = bottom_left_x + s.bbox_right - s.bbox_left;
            top_right_y = bottom_left_y - ((s.bbox_top - s.bbox_bottom) / 3);
            break;
    }
    if collision_rectangle(bottom_left_x, bottom_left_y, top_right_x, top_right_y, other.object_index, false, true) == other.id
    {
        instance_destroy();
    } else
    {
        other.life -= damage;
        other.state = scr_state_player_hit;
        instance_destroy();
    }
} else
{
    other.life -= damage;
    other.state = scr_state_player_hit;
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
