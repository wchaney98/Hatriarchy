<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_high_attack_hit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>creator = noone;
image_xscale *= PIXEL_CONST;
image_yscale *= PIXEL_CONST;
triggered = false;
check_hit = false;
xvel = 0;
yvel = 0;
image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (triggered)
{
    if (image_index &gt;= 5) 
    {
        instance_destroy();
    }
    if (!check_hit)
    {
        var coll = collision_point(x, y, obj_alive, false, false);
        if (coll == creator)
        {
            creator.life -= creator.damage;
        }
        if (coll != noone &amp;&amp; coll != creator)
        {
            if (coll.blocking)
            {
                var s = coll;
                var bottom_left_x;
                var bottom_left_y;
                var top_right_x;
                var top_right_y;
                switch (s.block_loc)
                {
                    case LOC_HIGH:
                        bottom_left_x = s.bbox_left;
                        bottom_left_y = s.bbox_bottom + (3 * ((s.bbox_top - s.bbox_bottom) / 3));
                        top_right_x = bottom_left_x + s.bbox_right - s.bbox_left;
                        top_right_y = bottom_left_y - ((s.bbox_top - s.bbox_bottom) / 3);
                        break;
                    case LOC_LOW:
                        bottom_left_x = s.bbox_left;
                        bottom_left_y = s.bbox_bottom + ((s.bbox_top - s.bbox_bottom) / 3);
                        top_right_x = bottom_left_x + s.bbox_right - s.bbox_left;
                        top_right_y = bottom_left_y - ((s.bbox_top - s.bbox_bottom) / 3);
                        break;
                    case LOC_MID:
                        bottom_left_x = s.bbox_left;
                        bottom_left_y = s.bbox_bottom + (2 * ((s.bbox_top - s.bbox_bottom) / 3));
                        top_right_x = bottom_left_x + s.bbox_right - s.bbox_left;
                        top_right_y = bottom_left_y - ((s.bbox_top - s.bbox_bottom) / 3);
                        break;
                }
                if collision_rectangle(bottom_left_x, bottom_left_y, top_right_x, top_right_y, s.object_index, false, true) == id
                {
                    if (coll.object_index = obj_player2_vs) coll.x += sign(coll.x - creator.x) * 8;
                } 
            } 
            else
            {
                coll.life -= creator.damage;
                switch(creator)
                {
                    case obj_player1_vs:
                        if (coll.object_index == obj_player2_vs)
                            coll.x += sign(coll.x - creator.x) * 8;
                        break;
                    case obj_player2_vs:
                        if (coll.object_index == obj_player1_vs)
                            coll.x += sign(coll.x - creator.x) * 8;
                        break;
                }
            }
        
                
            if (coll != creator)
            {
                if !(coll.blocking &amp;&amp; coll.block_loc == LOC_HIGH)
                {
                    scr_combo_add_and_check(creator);
                    scr_ap_add(creator, HIGH_AP);
                } else scr_reset_combo(creator);
            }
        }
        check_hit = true;
        }
}
else
{
    x += xvel;
    y += yvel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
