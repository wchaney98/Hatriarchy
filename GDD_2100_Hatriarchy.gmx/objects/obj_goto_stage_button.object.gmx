<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = "UNSET";
action = undefined;
disabled = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not disabled
{

    switch (action)
    {        
        /*
            STORY MODE MAP
        */
        
        case 0:
            // But first goto cutscene
            if not global.cutscene1
            {
                global.cutscene1 = true;
                global.curr_cutscene = 1;
                global.curr_cutscene_dest = rm_story_tutorial
                room_goto(rm_cutscenes);
            } else
                room_goto(rm_story_tutorial);
            break;
        
        case 1:
            // But first goto cutscene
            if not global.cutscene1
            {
                var dest;
                if global.first_tutorial_done global.curr_cutscene_dest = rm_story_level1;
                else global.curr_cutscene_dest = rm_story_tutorial
                global.curr_cutscene = 1;
                global.cutscene1 = true;
                room_goto(rm_cutscenes);
            } else
            {
                if global.first_tutorial_done
                    room_goto(rm_story_level1);
                else room_goto(rm_story_tutorial);
            }
            break;
            
        case 2:
            room_goto(rm_story_level2_choice);
            break      
        
        case 20:
            // Goto FIGHT stage 2 (cutscene if not yet)
            if not global.cutscene2
            {
                global.curr_cutscene_dest = rm_story_level2;
                global.curr_cutscene = 2;
                global.cutscene2 = true;
                room_goto(rm_cutscenes);
            } else room_goto(rm_story_level2);
            break;
        case 21:
            // Goto IMPRESS stage 2 (cutscene if not yet)
            if not global.cutscene2_alt
            {
                global.curr_cutscene_dest = rm_story_level2_alt; // diff curscene
                global.curr_cutscene = 2.5;
                global.cutscene2_alt = true;
                room_goto(rm_cutscenes);
            } else room_goto(rm_story_level2_alt);
            break;
            
        case 3:
            // Stage 3
            if not global.cutscene3
            {
                global.curr_cutscene_dest = rm_story_level3;
                global.curr_cutscene = 3;
                global.cutscene3 = true;
                room_goto(rm_cutscenes);
            } else room_goto(rm_story_level3);
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_font(test_font);
draw_set_halign(fa_middle);
draw_set_valign(fa_middle);

if (!disabled)
{
    image_alpha = 1.0;
    draw_set_color((c_black));    
}
else
{
    image_alpha = 0.5;
    draw_set_color(c_gray);
}

draw_text(x, y, text);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
